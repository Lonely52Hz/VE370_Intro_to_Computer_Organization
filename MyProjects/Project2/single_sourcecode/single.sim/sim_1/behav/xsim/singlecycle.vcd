$date
   Sat Nov  7 21:32:46 2020
$end
$version
  2020.1
$end
$timescale
  1ps
$end
$scope module test $end
$scope module uut $end
$var wire 1 ! clk $end
$var wire 32 " instruction [31:0] $end
$var wire 32 # pcin [31:0] $end
$var wire 32 $ pcout [31:0] $end
$var wire 32 % pc4 [31:0] $end
$var wire 32 & jumpaddr [31:0] $end
$var wire 32 ' branchaddr [31:0] $end
$var wire 32 ( tempaddr [31:0] $end
$var wire 32 ) regreaddata1 [31:0] $end
$var wire 32 * regreaddata2 [31:0] $end
$var wire 32 + writedata [31:0] $end
$var wire 32 , extend [31:0] $end
$var wire 32 - ALUsec [31:0] $end
$var wire 32 . ALUresult [31:0] $end
$var wire 32 / memreaddata [31:0] $end
$var wire 5 0 writereg [4:0] $end
$var wire 4 1 ALUcontrol [3:0] $end
$var wire 2 2 ALUop [1:0] $end
$var wire 1 3 regwrite $end
$var wire 1 4 ALUSrc $end
$var wire 1 5 branch $end
$var wire 1 6 jump $end
$var wire 1 7 beq $end
$var wire 1 8 bne $end
$var wire 1 9 regdst $end
$var wire 1 : memtoreg $end
$var wire 1 ; memread $end
$var wire 1 < memwrite $end
$var wire 1 = ALUzero $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
b100000000010000000000000100000 "
b100 #
b0 $
b100 %
b1000000000000010000000 &
b10000100 '
b100 (
b0 )
b0 *
b100000 +
b100000 ,
b100000 -
b100000 .
b0 /
b1000 0
b10 1
b0 2
13
14
05
06
07
08
09
0:
0;
0<
0=
$end
#10000
1!
b100000000010010000000000110111 "
b1000 #
b100 $
b1000 %
b1001000000000011011100 &
b11100100 '
b1000 (
b0 )
b0 *
b110111 +
b110111 ,
b110111 -
b110111 .
b0 /
b1001 0
0=
#20000
0!
#30000
1!
b1000010011000000000100100 "
b1100 #
b1000 $
b1100 %
b100001001100000000010010000 &
b11111111111111100000000010011100 '
b1100 (
b100000 )
b110111 *
b100000 +
b11111111111111111000000000100100 ,
b110111 -
b100000 .
b0 /
b10000 0
b0 1
b10 2
04
19
0=
#40000
0!
#50000
1!
b1000010011000000000100101 "
b10000 #
b1100 $
b10000 %
b100001001100000000010010100 &
b11111111111111100000000010100100 '
b10000 (
b100000 )
b110111 *
b110111 +
b11111111111111111000000000100101 ,
b110111 -
b110111 .
b0 /
b1 1
0=
#60000
0!
#70000
1!
b10101100000100000000000000000100 "
b10100 #
b10000 $
b10100 %
b10000000000000000010000 &
b100100 '
b10100 (
b0 )
b110111 *
b100 +
b100 ,
b100 -
b100 .
b0 /
b10000 0
b10 1
b0 2
03
14
09
1<
0=
#80000
0!
#90000
1!
b10001100000100010000000000000100 "
b11000 #
b10100 $
b11000 %
b10001000000000000010000 &
b101000 '
b11000 (
b0 *
b110111 +
b100 -
b110111 /
b10001 0
13
1:
1;
0<
#100000
0!
#110000
1!
b1001010000101100000100000 "
b11100 #
b11000 $
b11100 %
b100101000010110000010000000 &
b10110000010011100 '
b11100 (
b110111 )
b100000 *
b1010111 +
b101100000100000 ,
b100000 -
b1010111 .
b0 /
b1011 0
b10 2
04
19
0:
0;
0=
#120000
0!
#130000
1!
b1001010000101100000100010 "
b100000 #
b11100 $
b100000 %
b100101000010110000010001000 &
b10110000010101000 '
b100000 (
b110111 )
b100000 *
b10111 +
b101100000100010 ,
b100000 -
b10111 .
b0 /
b110 1
0=
#140000
0!
#150000
1!
b110001000010110000000000110111 "
b100100 #
b100000 $
b100100 %
b100001011000000000011011100 &
b100000000 '
b100100 (
b100000 )
b10111 *
b100000 +
b110111 ,
b110111 -
b100000 .
b0 /
b1011 0
b0 1
b11 2
14
09
0=
#160000
0!
#170000
1!
b1000010010101100000101010 "
b101000 #
b100100 $
b101000 %
b100001001010110000010101000 &
b10110000011010000 '
b101000 (
b100000 )
b110111 *
b1 +
b101100000101010 ,
b110111 -
b1 .
b0 /
b1011 0
b111 1
b10 2
04
19
0=
#180000
0!
#190000
1!
b10001000010000000000000000001 "
b110000 #
b101000 $
b101100 %
b100001000000000000000000100 &
b110000 '
b110000 (
b100000 )
b100000 *
b0 +
b1 ,
b100000 -
b0 .
b0 /
b0 0
b110 1
b1 2
03
15
17
1=
#200000
0!
#210000
1!
b10101000010010000000000000001 "
b111000 #
b110000 $
b110100 %
b100001001000000000000000100 &
b111000 '
b111000 (
b110111 *
b11111111111111111111111111101001 +
b110111 -
b11111111111111111111111111101001 .
b0 /
b0 0
15
07
18
0=
#220000
0!
#230000
1!
b1000000000000000000000000000 "
b0 #
b111000 $
b111100 %
b0 &
b111100 '
b111100 (
b0 )
b0 *
b0 +
b0 ,
b0 -
b0 .
b0 /
b0 0
b10 2
05
16
08
1=
#240000
0!
#250000
1!
b100000000010000000000000100000 "
b100 #
b0 $
b100 %
b1000000000000010000000 &
b10000100 '
b100 (
b100000 *
b100000 +
b100000 ,
b100000 -
b100000 .
b0 /
b1000 0
b10 1
b0 2
13
14
05
06
09
0=
#260000
0!
#270000
1!
b100000000010010000000000110111 "
b1000 #
b100 $
b1000 %
b1001000000000011011100 &
b11100100 '
b1000 (
b110111 *
b110111 +
b110111 ,
b110111 -
b110111 .
b0 /
b1001 0
0=

module SSD (Q, C);
  input [3: 0] Q;
  output [6: 0] C;
  
  assign C[6] = (~Q[3] & ~Q[2] & ~Q[1] & Q[0]) | (~Q[3] & Q[2] & ~Q[1] & ~Q[0]) | (Q[3] & ~Q[2] & Q[1] & Q[0]) | (Q[3] & Q[2] & ~Q[1] & Q[0]);
  assign C[5] = (~Q[3] & Q[2] & ~Q[1] & Q[0]) | (Q[2] & Q[1] & ~Q[0]) | (Q[3] & Q[1] & Q[0]) | (Q[3] & Q[2] & ~Q[0]);
  assign C[4] = (~Q[3] & ~Q[2] & Q[1] & ~Q[0]) | (Q[3] & Q[2] & ~Q[0]) | (Q[3] & Q[2] & Q[1]);
  assign C[3] = (~Q[3] & ~Q[2] & ~Q[1] & Q[0]) | (~Q[3] & Q[2] & ~Q[1] & ~Q[0]) | (Q[2] & Q[1] & Q[0]) | (Q[3] & ~Q[2] & Q[1] & ~Q[0]);
  assign C[2] = (~Q[3] & Q[0]) | (~Q[3] & Q[2] & ~Q[1]) | (~Q[2] & ~Q[1] & Q[0]);
  assign C[1] = (~Q[3] & ~Q[2] & Q[0]) | (~Q[3] & ~Q[2] & Q[1]) | (~Q[3] & Q[1] & Q[0]) | (Q[3] & Q[2] & ~Q[1] & Q[0]);
  assign C[0] = (~Q[3] & ~Q[2] & ~Q[1]) | (~Q[3] & Q[2] & Q[1] & Q[0]) | (Q[3] & Q[2] & ~Q[1] & ~Q[0]);
endmodule